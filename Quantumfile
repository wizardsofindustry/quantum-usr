---
#######################################################################
#
#   GENERAL PROJECT CONFIGURATION
#
#######################################################################
project:
  version: 1.0.0
  name: Universal Subject Resolver

# This section specifies additional properties of the deployment
# environment for the usr service.
deployment:

  # Configures the deployment environments. Only environments specified
  # in this list may be used to roll out the application(s) using
  # the deployment mechanisms supported by the Quantum Service
  # Assembler.
  environments:
  - name: staging

  # Specifies the deployment system used to bring this app to a specific
  # environment. Supported systems are 'kubernetes'.
  using: kubernetes

  # The deployment realm is either 'perimeter' (public-facing
  # services), 'citadel' (core internal service), business
  # (services implementing the business domain) or 'auxilary'
  # (supporting services).
  realm: citadel


k8s:

  # Common secrets that are injected into the containers
  # irrespective of the deployment environment, name or
  # role.
  secrets:
    env: []

  # Specifies the namespace in the Kubernetes cluster where all
  # objects related to this project are created.
  namespace: citadel

  # Specifies all deployments of this application.
  deployments:
  - role: api
    enabled: true
    secrets:
      env: []
    ports:
    - port: 8443
      protocol: TCP
    pull_secret: dockerhub.wizards

  # A list of commands that are created to Job objects in the
  # application container.
  jobs:
  - name: migrate
    enabled: true
    command:
    - alembic
    - upgrade
    - head
    env:
    - name: DCCP_ROLE
      value: default
    deadline: 120
    pull_secret: dockerhub.wizards

# This section describes the characteristics of the SG generated
# application.
app:

  # Indicates that the application requires a relational database systen. Quantum
  # services are assumed to connect to one RDBMS only.
  rdbms: true

  # Specifies the roles that the application has. Valid values are
  # 'http', 'handler', 'runner', 'listener' or 'scheduler'.
  roles:
  - http


# Defines all controllers used to handle HTTP requests. Do not use this
# section when the Quantum service is configured as a Django application.
controllers: []


#######################################################################
##
##  REPOSITORY DEFINITIONS
##
#######################################################################
repositories: []


#######################################################################
##
##  TASK DEFINITIONS
##
#######################################################################


tasks:
  # Set this value to 'yes' to enable and compile the task boilerplate
  # code.
  enabled: no
  functions: []


django: null

# Configures the application to serve content over the World Wide
# Web e.g. a website.
www: false


# Basic Python package configuration and settings.
package:
  language: python

  # This is the name of the Python module that contains the application
  # code, and is also used as a general identifier for this service.
  name: usr

  # Python module requirements from PyPi. Specified as in a requirements.txt,
  # file.
  requirements: []


# The i18n section specifies all settings related to internationalization
# (i18n) and localization (l10n).
i18n:

  # Globally enable or disable internationalization for this project.
  enabled: true

  # The i18n.default_language setting specifies the language default
  # for all components in the Quantum service.
  default_language: en

  # Specifies all languages that may be selected either by the end-user
  # or runtime configuration variables.
  languages:
  - name: English
    code: en
    enabled: true

  # Indicates that application URLs should be translated, if
  # applicable.
  translate_urls: true

  # Enables or disables the Javascript i18n catalog; it is up to
  # the web framework to decide how to serve this to the client.
  enable_javascript: false


# Application environment settings and variables.
environ:
  prefix: true # Prefix environment variables with USR_

  # Set the public ip address of the default network interface as
  # an environment variable. Note that this assumes that the IP
  # address does not changes during the application runtime.
  public_ip: no

  variables:
  - name: SECRET_KEY
    default: 30b465e0c882f37671cca0f142ec292493c1009c0baa0a39aa684b1259301460
    comment: Symmetric key for cryptographic operations.
    secret: true
  - name: DEBUG
    default: '1'
    type: "switch"
    isglobal: false
    comment: Run the application in debug mode.
  - name: IOC_DEFAULTS
    default: /etc/usr/ioc.conf
    comments: >
      Specifies the configuration file holding defaults for the inversion-of-control
      context.
  - name: IOC_DIR
    default: /etc/usr/ioc.conf.d/
    comments: >
      Specifies a directory where the application will look for inversion-of-control
      configuration files.
  - name: RDBMS_DSN
    default: postgresql+psycopg2://usr:usr@rdbms:5432/usr
    container: sqlite:///project.db
    secret: true
  - name: GIT_COMMIT
    comments: >
      The SHA-1 hash of the current Git commit.
  - name: HTTP_ADDR
    default: '0.0.0.0'
    comment: Listen address for the HTTP interface.
  - name: HTTP_PORT
    default: '8443'
    comment: Bind port for the HTTP interface.
  - name: LOGLEVEL
    default: 'INFO'
    comment: >
      Specifies the loglevel at application runtime.
    isglobal: false
  - name: ROLE
    default: default
    isglobal: false
    comment: >
      For multi-roled applications, this environment variable defines in which
      role it should operate.


# The application is currently not configured as an event listener. To
# enable this feature, add the 'listener' role to the #/app/roles list.
listener:

  # Lists all events that the application subscribes to. This does not
  # imply that it knows how to handle them (i.e., has a handler function
  # configured), only that it wants to receive them.
  events: []

  # The list below configures the event handlers that are run on each
  # incoming event message (individual handlers may choose to drop
  # messages). Each item in the list is a dictionary, having at least
  # a `qualname` member, specifying the Python qualified name (e.g.
  # import path) to the event handler *class*. For more information on
  # event handler classes, refer to the Sovereign Quantum documentation.
  handlers:
  - qualname: sq.event.NullEventHandler

  # Specifies the channel from which this application will receive
  # its event messages. Event messages are assumed to be routed
  # according to the criteria specified above.
  channel: usr.events.ingress


# Security related settings.
security:

  # A generic application secret that may be used, for example, to generate
  # signed cookies or other message signatures. This value MUST NOT be used in
  # production, and exists for development and testing purposes only.
  secret_key: 30b465e0c882f37671cca0f142ec292493c1009c0baa0a39aa684b1259301460

  tls:

    # A snakeoil X.509 certificate that is used to enable Transport Level Security (TLS)
    # in non-production environments. Like `secret_key`, this configuration MUST NOT
    # be used in production. Additional hostnames may be specified in the `hostnames`
    # section.
    hostnames:
    - usr

    crt: |
      -----BEGIN CERTIFICATE-----
      MIIBtjCCAR+gAwIBAgICA+gwDQYJKoZIhvcNAQELBQAwDjEMMAoGA1UEAwwDdXNy
      MB4XDTE4MDcxNzE4MjE1M1oXDTI4MDcxNDE4MjE1M1owDjEMMAoGA1UEAwwDdXNy
      MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCdNWxGVkEoRH9B7IrL+1dYwJzW
      bIrZWFXhLT08FzhmvWDOQE9uU0IdT0pNCL8do5Yyj6tqKEJGKlazhIrv52sFQfZN
      WuXhUsb0bJYhHdLwrU38dRaNz1df2H+YJHvG67ERNvPBqiu5q+xUsyYGREgb1iWH
      ygRk3S98mbzhJnn9CQIDAQABoyMwITAPBgNVHRMECDAGAQH/AgEAMA4GA1UdEQQH
      MAWCA3VzcjANBgkqhkiG9w0BAQsFAAOBgQCM0xUL45z03XnDK8MKXDjU+kVgQrWK
      zQ6NR89h+J6PqGFRKxogkGimgsLgLbbwZNRgGQUXupqxPzIftCfoA1AOS+QJupTH
      kLRxKEaAJuB95bvwtwnvDGMNdZjzo6pMd/72EQuYKSeOB2NroSQgszQJXayoAeyB
      WSQxEiN59ithCQ==
      -----END CERTIFICATE-----

    key: |
      -----BEGIN RSA PRIVATE KEY-----
      MIICXAIBAAKBgQCdNWxGVkEoRH9B7IrL+1dYwJzWbIrZWFXhLT08FzhmvWDOQE9u
      U0IdT0pNCL8do5Yyj6tqKEJGKlazhIrv52sFQfZNWuXhUsb0bJYhHdLwrU38dRaN
      z1df2H+YJHvG67ERNvPBqiu5q+xUsyYGREgb1iWHygRk3S98mbzhJnn9CQIDAQAB
      AoGAWbAZxoL9B0kUxPp7MOaCrYqtr5MbH+ZKkH2rurWQouSV7vU3m7x6MpiCzjIY
      PoOOc+gNJjIzpS4QarhKP5XqMp+TD4O+mEsIKw39J5uNd3r6BVagYU/zKbd+hx5m
      RVecC8FGp3EDNdZqxztILKIU/1eG6l5xv8vHh8SNpNOEVpECQQDRZsg1OA+EzY+H
      H9Z7SNmRI1fhC3LO6Zb7FFgCuO9fk6vJgGYEu3YQo92vjQBOM4m2yNHuah3DNwYo
      cI4+RRpFAkEAwDFQAmxiFfItRxIOIW0gpQ+MIxyrFFYjOetaOd3SF1S0BzPayEqz
      7R0HxYHJDldxH6CedZpiuacKwqFKrQqF9QJAblhSMjErhFjqRFNTq7204JWWToHA
      6yYOqJqM0kpv4ZaolNNzbxT130jqngKYYZ0o+cgTUCZdLqzFMvQ1EL1LXQJBAKwq
      gJXrKWKnc0/7KJVhAKFccBj0EX1CPIQiBM1ZnF4yDqN1HEPYR53dJ50SSl2Cj1/Z
      rpmDF3Vf4g/AFPk2OBECQD/cjLd70SLzytcKoRz+lT7WHmyhfyyDPHDMY34n0OYJ
      ++L0aWDWpJl+A38nH7z1H/7GE/CtVMl1Fho7KUzg0h4=
      -----END RSA PRIVATE KEY-----



# A list of Quantum services that the application requires.
#requires:
#- url: git+https://github.com/wizardsofindustry/quantum-usr.git


# Configuration related to the automated testing of the Quantum
# service.
testing:
  min_coverage: 99
  lint: false


#######################################################################
##
##  CI/CD CONFIGURATION
##
#######################################################################
ci:

  # Enforces that commits with changes to the Quantumfile are signed
  # by trusted comitters.
  signed_quantumfile: true

  # Indicates that the CI/CD server must verify the GPG signature of
  # commit tags before deploying the latest build to a certain
  # environment.
  #
  # Setting ci.signed_deployments to true also implies that a commit
  # tag is mandatory in order to deploy.
  signed_deployments: true

  # Instructs the CI/CD pipeline to build frontend assets on the slave
  # instead of inside the container image.
  build_assets: false

  ssh:
    # Identifies the SSH credentials that are used to access protected
    # resources.
    credentials: null


# Docker configuration.
docker:

  #: Indicates if the code must be linted when building the
  #: Docker container.
  lint: false

  # The base image for the application container. This value
  # may be changed to use a custom image, instead of the
  # default Quantum base image.
  base: wizardsofindustry/quantum:latest

  # Specifies the Docker repository that is used for
  # this application, used by development tooling and
  # the CI/CD pipeline.
  repository: wizardsofindustry/quantum-usr

  # Items to add to the .dockerignore file.
  ignore: []

  # CI/CD configuration for containerization and image
  # publication.
  ci:
    # The credentials that the CI/CD pipeline may use to
    # login and publish to a Docker registry.
    credentials_id: wizards.dockerhub

    # Indicates if the CI pipeline may use VCS tags to tag
    # containers.
    use_tags: true

    # Specifies the branches that will trigger a container build
    # by default.
    build_branches:
    - name: master
      tag: latest
      always_deploy: false
    - name: develop
      tag: staging
      env: staging
      deployment: staging
      always_deploy: false
    - pattern: "^(release|version|sprint)-.*$"
    - pattern: "^(hotfix|fix)-.*$"
    - pattern: "^(feature|task)-.*$"




# This section contains SG related settings and should not be modified under
# normal circumstances.
sg:

  # Specifies the SG project type. Allowed values are: service, system or infra.
  type: service
  dirname: .sg


# Configuration file format version. Changing this will have dire
# consequences.
version: "1"


#######################################################################
##
##  CODE QUALITY
##
#######################################################################
lint:
  javascript: false
  python: false
  scss: false
  yaml: false


#######################################################################
#
#   LANGUAGE SPECIFIC CONFIGURATION
#
#######################################################################
