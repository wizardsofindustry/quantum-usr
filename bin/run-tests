#!/bin/sh
#######################################################################
#
# USR TEST RUNNER
#
#  Unit:
#    Atomic tests of the application codebase.
#  Integration:
#    Test the application codebase as a whole, with external
#    dependencies (e.g., database servers, HTTP APIs) mocked.
#  System:
#    Test the application as a part of a larger system. Dependencies
#    (databases, message brokers) may be assumed to installed at
#    localhost.
#
#######################################################################
export QUANTUM_TESTING_PHASE=${QUANTUM_TESTING_PHASE-"unit"}
export SQ_TESTING_PHASE=${QUANTUM_TESTING_PHASE}
export QUANTUM_DISABLE_AUTH=${SQ_DISABLE_AUTH-"1"}
export BUILD_ID=${BUILD_ID-"0"} # Used to allow concurrent builds in the CI.
export MODULE_NAME="usr"
export MIN_PERCENTAGE="99"
export COVERAGE_FILE=".coverage.$QUANTUM_TESTING_PHASE.$BUILD_ID"
export COVERAGE=coverage3
RETVAL="0"

export QUANTUM_TESTING_PHASE
export QUANTUM_DISABLE_AUTH
echo "Running test phase '$QUANTUM_TESTING_PHASE', build: $BUILD_ID"
case $QUANTUM_TESTING_PHASE in
  lint)
    find ./usr -iname "*.py" | xargs pylint\
      -d too-few-public-methods -d duplicate-code\
      -d bad-continuation -d line-too-long --ignore __init__.py
    RETVAL=`echo $?`
  ;;
  unit)
    $COVERAGE run -m nose --cover-package=$MODULE_NAME $@
    RETVAL=`echo $?`
  ;;
  integration)
    $COVERAGE run -m nose --cover-package=$MODULE_NAME $@
    RETVAL=`echo $?`
  ;;
  system)
    $COVERAGE run -m nose --cover-package=$MODULE_NAME $@
    RETVAL=`echo $?`
  ;;
  coverage)
    export COVERAGE_FILE=".coverage"
    $COVERAGE combine .
    $COVERAGE report --include=$MODULE_NAME/* \
        --fail-under $MIN_PERCENTAGE -m\
        --omit **/test_*\
        --skip-covered
    RETVAL=`echo $?`
  ;;
esac
exit $RETVAL
